Description: Bucket for image storage (basically)

AWSTemplateFormatVersion: 2010-09-09

Parameters:
  s3SavesBucketName:
    Type: String
    Default: NONE
  s3BucketName:
    Type: String
    Default: image-storage
  authRoleName:
    Type: String
  unauthRoleName:
    Type: String
  s3PublicPolicy:
    Type: String
    Default: NONE
  s3PrivatePolicy:
    Type: String
    Default: NONE
  s3ProtectedPolicy:
    Type: String
    Default: NONE
  s3UploadsPolicy:
    Type: String
    Default: NONE
  s3ReadPolicy:
    Type: String
    Default: NONE
  s3PermissionsAuthenticatedPublic:
    Type: String
    Default: DISALLOW
  s3PermissionsAuthenticatedProtected:
    Type: String
    Default: DISALLOW
  s3PermissionsAuthenticatedPrivate:
    Type: String
    Default: DISALLOW
  s3PermissionsAuthenticatedUploads:
    Type: String
    Default: DISALLOW
  s3PermissionsGuestPublic:
    Type: String
    Default: DISALLOW
  s3PermissionsGuestUploads:
    Type: String
    Default: DISALLOW
  AuthenticatedAllowList:
    Type: String
    Default: DISALLOW
  GuestAllowList:
    Type: String
    Default: DISALLOW
  selectedGuestPermissions:
    Type: CommaDelimitedList
    Default: NONE
  selectedAuthenticatedPermissions:
    Type: CommaDelimitedList
    Default: NONE

Conditions:
  CreateAuthPublic: !Not
    - !Equals
      - !Ref s3PermissionsAuthenticatedPublic
      - DISALLOW
  CreateAuthProtected: !Not
    - !Equals
      - !Ref s3PermissionsAuthenticatedProtected
      - DISALLOW
  CreateAuthPrivate: !Not
    - !Equals
      - !Ref s3PermissionsAuthenticatedPrivate
      - DISALLOW
  CreateAuthUploads: !Not
    - !Equals
      - !Ref s3PermissionsAuthenticatedUploads
      - DISALLOW
  CreateGuestPublic: !Not
    - !Equals
      - !Ref s3PermissionsGuestPublic
      - DISALLOW
  CreateGuestUploads: !Not
    - !Equals
      - !Ref s3PermissionsGuestUploads
      - DISALLOW
  AuthReadAndList: !Not
    - !Equals
      - !Ref AuthenticatedAllowList
      - DISALLOW
  GuestReadAndList: !Not
    - !Equals
      - !Ref GuestAllowList
      - DISALLOW

Outputs:
  BucketName:
    Description: Bucket name for the S3 bucket
    Value: !Ref S3Bucket
  Region:
    Value: !Ref "AWS::Region"
  S3SNSCreateObjTopicArn:
    Description: The SNS topic to objects created at bucket
    Value: !GetAtt SNSCreateObject.Outputs.S3SNSTopicArn
  S3SNSDeleteObjTopicArn:
    Description: The SNS topic to objects deleted at bucket
    Value: !GetAtt SNSDeleteObject.Outputs.S3SNSTopicArn

Resources:
  S3Bucket:
    Type: "AWS::S3::Bucket"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref s3BucketName
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - HEAD
              - PUT
              - POST
              - DELETE
            AllowedOrigins:
              - "*"
            ExposedHeaders:
              - x-amz-server-side-encryption
              - x-amz-request-id
              - x-amz-id-2
              - ETag
            Id: S3CORSRuleId1
            MaxAge: 3000
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      NotificationConfiguration:
        TopicConfigurations:
          - Topic: !GetAtt SNSCreateObject.Outputs.S3SNSTopicArn
            Event: "s3:ObjectCreated:*"
          - Topic: !GetAtt SNSDeleteObject.Outputs.S3SNSTopicArn
            Event: "s3:ObjectRemoved:Delete"

  S3AuthPublicPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action: !Split
            - ","
            - !Ref s3PermissionsAuthenticatedPublic
          Resource:
            - !Sub "arn:aws:s3:::${S3Bucket}/public/*"
      PolicyName: !Ref s3PublicPolicy
      Roles:
        - !Ref authRoleName
    DependsOn:
      - S3Bucket
    Condition: CreateAuthPublic

  S3AuthProtectedPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action: !Split
            - ","
            - !Ref s3PermissionsAuthenticatedProtected
          Resource:
            - !Sub
              - "arn:aws:s3:::${S3Bucket}/protected/${cognitoId}/*"
              - cognitoId: "${cognito-identity.amazonaws.com:sub}"
      PolicyName: !Ref s3ProtectedPolicy
      Roles:
        - !Ref authRoleName
    DependsOn:
      - S3Bucket
    Condition: CreateAuthProtected

  S3AuthPrivatePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action: !Split
            - ","
            - !Ref s3PermissionsAuthenticatedPrivate
          Resource:
            - !Sub
              - "arn:aws:s3:::${S3Bucket}/private/${cognitoId}/*"
              - cognitoId: "${cognito-identity.amazonaws.com:sub}"
      PolicyName: !Ref s3PrivatePolicy
      Roles:
        - !Ref authRoleName
    DependsOn:
      - S3Bucket
    Condition: CreateAuthPrivate

  S3AuthUploadPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action: !Split
            - ","
            - !Ref s3PermissionsAuthenticatedUploads
          Resource:
            - !Sub "arn:aws:s3:::${S3Bucket}/uploads/*"
      PolicyName: !Ref s3UploadsPolicy
      Roles:
        - !Ref authRoleName
    DependsOn:
      - S3Bucket
    Condition: CreateAuthUploads

  S3GuestPublicPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Action: !Split
            - ","
            - !Ref s3PermissionsGuestPublic
          Resource:
            - !Sub "arn:aws:s3:::${S3Bucket}/public/*"
      PolicyName: !Ref s3PublicPolicy
      Roles:
        - !Ref unauthRoleName
    DependsOn:
      - S3Bucket
    Condition: CreateGuestPublic

  S3AuthReadPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Statement:
          - Action: "s3:GetObject"
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/protected/*"
          - Action: "s3:ListBucket"
            Condition:
              StringLike:
                "s3:prefix":
                  - public/
                  - public/*
                  - protected/
                  - protected/*
                  - "private/${cognito-identity.amazonaws.com:sub}/"
                  - "private/${cognito-identity.amazonaws.com:sub}/*"
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${S3Bucket}"
        Version: 2012-10-17
      PolicyName: !Ref s3ReadPolicy
      Roles:
        - !Ref authRoleName
    DependsOn:
      - S3Bucket
    Condition: AuthReadAndList

  S3GuestReadPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Statement:
          - Action: "s3:GetObject"
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/protected/*"
          - Action: "s3:ListBucket"
            Condition:
              StringLike:
                "s3:prefix":
                  - public/
                  - public/*
                  - protected/
                  - protected/*
            Effect: Allow
            Resource: !Sub "arn:aws:s3:::${S3Bucket}"
        Version: 2012-10-17
      PolicyName: !Ref s3ReadPolicy
      Roles:
        - !Ref unauthRoleName
    DependsOn:
      - S3Bucket
    Condition: GuestReadAndList
